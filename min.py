import os
import re

files = []

print("Generating md.min.js")

def grab_dirs(root):
    if not root.endswith("/"):
        root += "/"
    for file in os.listdir(root):
        if file.endswith(".js"):
            files.append(root + file)
        else:
            try:
                grab_dirs(root + file)
            except:
                pass

grab_dirs("md")

minjs = ""

repl = [
    [r"([\{\[\(])\n *", r"\1"],
    [r"\n *", r"\n"],
    [r" *\n", r"\n"],
    [r"\n *([\}\]\)])", r"\1\n"],
    [r"\), \(", r"),\n("],
    [r"\], \[", r"],\n["],
    [r"\}, \{", r"},\n{"],
    [r'" *\+ *\n"', r''],
    [r"' *\+ *\n'", r""],
]

for file in files:
    st = open(file).read()
    for r, s in repl:
        st = re.sub(r, s, st)
    minjs += st + "\n"

repl = [
    [r";\n", r";"],
    [r"( *\n *)+", r"\n"],
    [r"([\}\]\)])\n(.?)([\}\]\),])", r"\1\2\3"],
    [r" *([=,\|+]) *", r"\1"],
    [r"//.*\n", ""],
    [r"/\*(.|\n)*?\*/", ""],
]
for r, s in repl:
    minjs_ = ""
    while minjs != minjs_:
        minjs_ = minjs
        minjs = re.sub(r, s, minjs)

minjs = """\
/* THIS FILE IS AUTOMATICALLY GENERATED
 * BY `min.py`. DO NOT EDIT THIS FILE.
 */
""" + minjs
open("out/md.min.js", "w+").write(minjs)

print("Generating style.min.css")

mincss = open("css/style.css").read()

repl = [
    [r",[\n ]*", r","],
    [r"([;\{])\n *", r"\1"],
    [r"\}\n\}", r"}}"],
    [r" *: *", r":"],
    [r",[\n ]*", r","],
    [r" *([\{\(]) *", r"\1"],
    [r" *\n+ *", r"\n"],
    [r"/\*(.|\n)*?\*/", ""],
]

for r, s in repl:
    mincss_ = ""
    while mincss != mincss_:
        mincss_ = mincss
        mincss = re.sub(r, s, mincss)

mincss = """\
/* THIS FILE IS AUTOMATICALLY GENERATED
 * BY `min.py`. DO NOT EDIT THIS FILE.
 */
""" + mincss
open("out/style.min.css", "w+").write(mincss)

styles = [
    ".btn"
    ".hide",
    ".unhide",
    ".code",
    ".dict",
    ".line",
    ".def",
    ".hidden-marker",
]

print("Generating style.lite.min.css")

litecss = """\
/* THIS FILE IS AUTOMATICALLY GENERATED
 * BY `min.py`. DO NOT EDIT THIS FILE.
 */
"""

for line in mincss.split("\n"):
    for style in styles:
        if style in line.split("{")[0]:
            litecss += line + "\n"
            break

open("out/style.lite.min.css", "w+").write(litecss)
